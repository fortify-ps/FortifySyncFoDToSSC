/*******************************************************************************
 * (c) Copyright 2020 Micro Focus or one of its affiliates
 *
 * Permission is hereby granted, free of charge, to any person obtaining a 
 * copy of this software and associated documentation files (the 
 * "Software"), to deal in the Software without restriction, including without 
 * limitation the rights to use, copy, modify, merge, publish, distribute, 
 * sublicense, and/or sell copies of the Software, and to permit persons to 
 * whom the Software is furnished to do so, subject to the following 
 * conditions:
 * 
 * The above copyright notice and this permission notice shall be included 
 * in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY 
 * KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 ******************************************************************************/

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id "io.freefair.lombok" version "4.1.2"
	id "com.jfrog.bintray" version "1.8.4"
	id 'org.ajoberstar.grgit' version "4.0.0"
	id 'com.github.jk1.dependency-license-report' version '1.12'
	id "org.kordamp.gradle.markdown" version "2.0.0"
}

group = 'com.fortify.sync.fod-ssc'

ext {
	gradleHelpersLocation = "https://raw.githubusercontent.com/fortify-ps/gradle-helpers/1.2"
}

apply from: "${gradleHelpersLocation}/repo-helper.gradle"
apply from: "${gradleHelpersLocation}/version-helper.gradle"

// Project and plugin version based on SCM information
version = getProjectVersionAsBetaOrRelease(true)
ext {
	bintrayRepo = "${getBetaOrReleaseLabel()}"
	bintrayPkgName = "${rootProject.name}"
	bintrayDownloadContainerName = getProjectVersionAsBetaOrRelease(false)
	projectLicense = 'MIT'
}

apply from: "${gradleHelpersLocation}/thirdparty-helper.gradle"
apply from: "${gradleHelpersLocation}/bintray-binaries-helper.gradle"
apply from: "${gradleHelpersLocation}/readme2html.gradle"

apply plugin: 'java'
sourceCompatibility = 1.8

configurations.all {
    // Don't cache modules that may change (i.e. snapshots)
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

if (project.hasProperty('fortify')) {
	tasks.withType(JavaCompile) {
	    source = delombok
	}
	// For some reason tests fail due to the source = delombok setting above
	// We don't need to run tests anyway during SCA translation, so we disable tests here
	test.enabled = false
}

dependencies {
	// Spring dependencies
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	// Fortify client API dependencies
	implementation('com.fortify.client.api:client-api-ssc') { changing = true }
	implementation('com.fortify.client.api:client-api-fod') { changing = true }
}

dependencyManagement {
	imports {
		mavenBom("com.fortify.client.api:fortify-client-api:5.5-SNAPSHOT")
	}
}

test {
	useJUnitPlatform()
}

task dist(type: Zip) {
	dependsOn 'build', 'readme2html'
	archiveFileName = "${rootProject.name}-${project.version}.zip"
	destinationDirectory = file("$buildDir/dist")
	from("${libsDir}") {
		include "${rootProject.name}-${project.version}.jar"
	}
	from "${buildDir}/html"
	from("${projectDir}") {
		include "config/**/*"
		include "LICENSE.TXT"
	}
}

bintray {
    filesSpec {
       from("${buildDir}/dist") {
          include "*.zip"
       }
       into '.'
    }
}
_bintrayRecordingCopy.dependsOn 'clean', 'dist', 'distThirdParty'