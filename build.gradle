plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id "io.freefair.lombok" version "4.1.2"
	id 'java'
	id 'eclipse'
}

group = 'com.fortify.sync.fod-ssc'
version = '0.0.1-SNAPSHOT' // TODO Automatically determine version from Git tag/branch
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
	mavenLocal()
    // repository with fortify-ps releases
    maven { url "https://dl.bintray.com/fortify-ps/maven" }
    // repository with fortify-ps snapshots
    maven { url "https://oss.jfrog.org/artifactory/oss-snapshot-local" }
    mavenCentral()
}

dependencies {
	// For now we don't use a database, as configuration is provided through a
	// configuration file.
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//runtimeOnly 'com.h2database:h2'
	
	// Spring dependencies
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	// Fortify client API dependencies
	implementation('com.fortify.client.api:client-api-ssc') { changing = true }
	implementation('com.fortify.client.api:client-api-fod') { changing = true }
}

dependencyManagement {
	imports {
		mavenBom("com.fortify.client.api:fortify-client-api:5.4-SNAPSHOT")
	}
}

test {
	useJUnitPlatform()
}
