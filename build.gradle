plugins {
	id 'java'
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id "io.freefair.lombok" version "4.1.2"
	id "com.jfrog.bintray" version "1.8.4"
	id 'org.ajoberstar.grgit' version "4.0.0"
	id 'com.github.jk1.dependency-license-report' version '1.12'
}

group = 'com.fortify.sync.fod-ssc'

ext {
	gradleHelpersLocation = "https://raw.githubusercontent.com/fortify-ps/gradle-helpers/master"
}

apply from: "${gradleHelpersLocation}/repo-helper.gradle"
apply from: "${gradleHelpersLocation}/version-helper.gradle"

// Project and plugin version based on SCM information
version = getProjectVersionAsBetaOrRelease(true)
ext {
	bintrayDownloadContainerName = getProjectVersionAsBetaOrRelease(false)
	projectLicense = 'MIT'
}

apply from: "${gradleHelpersLocation}/dependency-sources-licenses-helper.gradle"
apply from: "${gradleHelpersLocation}/bintray-binaries-helper.gradle"

apply plugin: 'java'
sourceCompatibility = 1.8

configurations.all {
    // Don't cache modules that may change (i.e. snapshots)
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	// For now we don't use a database, as configuration is provided through a
	// configuration file.
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//runtimeOnly 'com.h2database:h2'
	
	// Spring dependencies
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	//implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	// Fortify client API dependencies
	implementation('com.fortify.client.api:client-api-ssc') { changing = true }
	implementation('com.fortify.client.api:client-api-fod') { changing = true }
}

dependencyManagement {
	imports {
		mavenBom("com.fortify.client.api:fortify-client-api:5.4-SNAPSHOT")
	}
}

test {
	useJUnitPlatform()
}

bintray {
    filesSpec {
       from("build/libs") { // Plugin jar
          include "*.jar"
       }
       from("build/dist") { // Dependency sources and licenses
          include "*.zip"
       }
       into '.'
    }
}
_bintrayRecordingCopy.dependsOn 'build', 'packageDependencySourcesAndLicenses'
